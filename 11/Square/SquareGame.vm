// field Square square; 
// field int direction; 
// constructor SquareGame new() { 
// let square = Square.new(0, 0, 30); 
function SquareGame.new 0
push constant 2
call Memory.alloc 1
pop pointer 0
push constant 0
push constant 0
push constant 30
call Square.new 3
pop this 0
// let direction = 0; 
push constant 0
pop this 1
// return this; 
push pointer 0
return
// } 
// method void dispose() { 
// do square.dispose(); 
function SquareGame.dispose 0
push argument 0
pop pointer 0
push this 0
call Square.dispose 1
pop temp 0
// do Memory.deAlloc(this); 
push pointer 0
call Memory.deAlloc 1
pop temp 0
// return; 
push constant 0
return
// } 
// method void moveSquare() { 
// if (direction = 1) { do square.moveUp(); } 
function SquareGame.moveSquare 0
push argument 0
pop pointer 0
// if found
push this 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
call Square.moveUp 1
pop temp 0
// if (direction = 2) { do square.moveDown(); } 
label IF_FALSE0
// if found
push this 1
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
call Square.moveDown 1
pop temp 0
// if (direction = 3) { do square.moveLeft(); } 
label IF_FALSE1
// if found
push this 1
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 0
call Square.moveLeft 1
pop temp 0
// if (direction = 4) { do square.moveRight(); } 
label IF_FALSE2
// if found
push this 1
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 0
call Square.moveRight 1
pop temp 0
// do Sys.wait(5); 
label IF_FALSE3
push constant 5
call Sys.wait 1
pop temp 0
// return; 
push constant 0
return
// } 
// method void run() { 
// var char key; 
// var boolean exit; 
// let exit = false; 
function SquareGame.run 2
push argument 0
pop pointer 0
push constant 0
pop local 1
// while (~exit) { 
label WHILE_EXP4
push local 1
not
not
if-goto WHILE_END4
// while (key = 0) { 
label WHILE_EXP5
push local 0
push constant 0
eq
not
if-goto WHILE_END5
// let key = Keyboard.keyPressed(); 
call Keyboard.keyPressed 0
pop local 0
// do moveSquare(); 
push pointer 0
call SquareGame.moveSquare 1
pop temp 0
// } 
goto WHILE_EXP5
label WHILE_END5
// if (key = 81)  { let exit = true; } 
// if found
push local 0
push constant 81
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 0
not
pop local 1
// if (key = 90)  { do square.decSize(); } 
label IF_FALSE6
// if found
push local 0
push constant 90
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push this 0
call Square.decSize 1
pop temp 0
// if (key = 88)  { do square.incSize(); } 
label IF_FALSE7
// if found
push local 0
push constant 88
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push this 0
call Square.incSize 1
pop temp 0
// if (key = 131) { let direction = 1; } 
label IF_FALSE8
// if found
push local 0
push constant 131
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push constant 1
pop this 1
// if (key = 133) { let direction = 2; } 
label IF_FALSE9
// if found
push local 0
push constant 133
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push constant 2
pop this 1
// if (key = 130) { let direction = 3; } 
label IF_FALSE10
// if found
push local 0
push constant 130
eq
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push constant 3
pop this 1
// if (key = 132) { let direction = 4; } 
label IF_FALSE11
// if found
push local 0
push constant 132
eq
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push constant 4
pop this 1
// while (~(key = 0)) { 
label IF_FALSE12
label WHILE_EXP13
push local 0
push constant 0
eq
not
not
if-goto WHILE_END13
// let key = Keyboard.keyPressed(); 
call Keyboard.keyPressed 0
pop local 0
// do moveSquare(); 
push pointer 0
call SquareGame.moveSquare 1
pop temp 0
// } 
goto WHILE_EXP13
label WHILE_END13
goto WHILE_EXP4
label WHILE_END4
// return; 
push constant 0
return
// } 
